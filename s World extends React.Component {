[1mdiff --git a/.babelrc b/.babelrc[m
[1mindex 53ba16a..84a0c43 100644[m
[1m--- a/.babelrc[m
[1m+++ b/.babelrc[m
[36m@@ -1,3 +1,4 @@[m
 {[m
[31m-  "presets": ["env", "react"][m
[32m+[m[32m "presets": ["react", "es2015"],[m
[32m+[m[32m "plugins": ["syntax-async-functions"][m
 }[m
\ No newline at end of file[m
[1mdiff --git a/src/components/home/components/world.js b/src/components/home/components/world.js[m
[1mindex dbde6ad..1e73799 100644[m
[1m--- a/src/components/home/components/world.js[m
[1m+++ b/src/components/home/components/world.js[m
[36m@@ -1,16 +1,22 @@[m
 import React from 'react'[m
 import { connect } from 'react-redux'[m
 [m
[31m-import { nextWorld, newTurn /* nextPlayer */ } from '../actions'[m
[32m+[m[32mimport { nextWorld, newTurn, nextPlayer } from '../actions'[m
 [m
 class World extends React.Component {[m
   constructor(props) {[m
     super(props)[m
[32m+[m[32m    const {[m
[32m+[m[32m      world,[m
[32m+[m[32m      player,[m
[32m+[m[32m      number,[m
[32m+[m[32m      turn[m
[32m+[m[32m    } = this.props[m
     this.state = {[m
[31m-      player: props.player,[m
[31m-      number: props.number,[m
[31m-      world: props.world,[m
[31m-      turn: props.turn[m
[32m+[m[32m      world,[m
[32m+[m[32m      player,[m
[32m+[m[32m      number,[m
[32m+[m[32m      turn[m
     }[m
     this.handleClick = this.handleClick.bind(this)[m
     this.firstNb = {}[m
[36m@@ -22,17 +28,25 @@[m [mclass World extends React.Component {[m
     this.firstBlockPlayable(1)[m
   }[m
 [m
[31m-  componentWillUpdate(nextProps, nextState) {[m
[31m-    const { open } = this.state[m
[31m-    // this.setNumber()[m
[32m+[m[32m  /* componentDidUpdate(nextProps) {[m
[32m+[m[32m    const {[m
[32m+[m[32m      world,[m
[32m+[m[32m      player,[m
[32m+[m[32m      number,[m
[32m+[m[32m      turn[m
[32m+[m[32m    } = nextProps[m
 [m
[31m-    if (nextState.open === true && open === false) {[m
[31m-      console.log('rhaaaaaaaa')[m
[31m-    }[m
[31m-  }[m
[32m+[m[32m    this.setState({[m
[32m+[m[32m      world,[m
[32m+[m[32m      player,[m
[32m+[m[32m      number,[m
[32m+[m[32m      turn[m
[32m+[m[32m    })[m
[32m+[m[32m  } */[m
 [m
   setNumber() {[m
[31m-    const { number } = this.props[m
[32m+[m[32m    const { home } = this.props[m
[32m+[m[32m    const { number } = home[m
     if (number.first !== undefined) {[m
       const [first, second] = number.first[m
 [m
[36m@@ -75,7 +89,8 @@[m [mclass World extends React.Component {[m
   }[m
 [m
   firstBlockPlayable(player) {[m
[31m-    const { world, turn } = this.props[m
[32m+[m[32m    const { home } = this.props[m
[32m+[m[32m    const { world, turn } = home[m
     console.log(turn.nbTurn)[m
     let el[m
     let colorBlock[m
[36m@@ -143,7 +158,8 @@[m [mclass World extends React.Component {[m
   }[m
 [m
   initBlock() {[m
[31m-    const { world } = this.props[m
[32m+[m[32m    const { home } = this.props[m
[32m+[m[32m    const { world } = home[m
     let el[m
 [m
     world.forEach((row, rowIndex) => {[m
[36m@@ -184,15 +200,16 @@[m [mclass World extends React.Component {[m
     })[m
   }[m
 [m
[31m-  handleClick(event) {[m
[32m+[m[32m  async handleClick(event) {[m
     const el = event.target[m
[32m+[m[32m    const { home } = this.props[m
     const {[m
       player,[m
       world,[m
       turn[m
[31m-    } = this.props[m
[32m+[m[32m    } = home[m
 [m
[31m-    // console.log(world)[m
[32m+[m[32m    console.log(`player fffffffffffffffff : ${player}`)[m
 [m
     nextWorld(el.id, world, player)[m
     switch (player) {[m
[36m@@ -226,23 +243,23 @@[m [mclass World extends React.Component {[m
 [m
     // console.log(`player avant update : ${player}`)[m
 [m
[31m-    // nextPlayer(player)[m
[31m-    // console.log('state.player apr√©s next : ')[m
[32m+[m[32m    await nextPlayer(player)[m
[32m+[m[32m    // console.log('state.player apr√©s next : ', player)[m
[32m+[m[32m    // console.log('state.player apr√©s next : ', home)[m
[32m+[m
     // console.log({ player })[m
[31m-    // console.log(this.props)[m
[31m-    // console.log(this.state)[m
[31m-    this.setState({[m
[31m-      player: { player }[m
[31m-    })[m
     // ICI state player non actualis√©[m
[31m-    console.log(`player apr√©s update : ${player}`)[m
[31m-    const element = this.firstBlockPlayable(player)[m
[31m-    // this.continueTurn(element)[m
[32m+[m
[32m+[m[32m    const ok = this.props[m
[32m+[m[32m    const tpmnextPlayer = ok.player[m
[32m+[m[32m    const element = this.firstBlockPlayable(tpmnextPlayer)[m
[32m+[m[32m    this.continueTurn(element)[m
     this.blockPlayable(element)[m
   }[m
 [m
   render() {[m
[31m-    const { world/* , number, player */ } = this.props[m
[32m+[m[32m    const { home } = this.props[m
[32m+[m[32m    const { world, player } = home[m
     console.log(typeof world)[m
     // console.log(world)[m
 [m
[36m@@ -252,6 +269,7 @@[m [mclass World extends React.Component {[m
     } */[m
     return ([m
       <table id="world">[m
[32m+[m[32m        { player }[m
         <tbody>[m
           { world.map((row, rowIndex) => ([m
             <tr key={rowIndex}>[m
[36m@@ -280,4 +298,4 @@[m [mclass World extends React.Component {[m
   }[m
 }[m
 [m
[31m-export default connect(state => state)(World)[m
[32m+[m[32mexport default connect(state => state)(World)[m
\ No newline at end of file[m
